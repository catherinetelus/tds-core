// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TextArea disabling can be disabled 1`] = `
.c0 {
  max-width: 100%;
  min-width: 100%;
  min-height: 208px;
  position: relative;
  width: 100%;
  margin: 0;
  outline: 0;
  text-overflow: ellipsis;
  border-color: #54595f;
  -ms-overflow-style: -ms-autohiding-scrollbar;
  border-width: 1px;
  border-style: solid;
  border-radius: 4px;
  font-family: "TELUS-Web","Helvetica Neue",Helvetica,Arial,sans-serif;
  word-wrap: break-word;
  font-size: 1rem;
  -webkit-letter-spacing: -0.8px;
  -moz-letter-spacing: -0.8px;
  -ms-letter-spacing: -0.8px;
  letter-spacing: -0.8px;
  line-height: 1.5;
  font-weight: 400;
  color: #2a2c2e;
  -moz-appearance: textfield;
  padding: 0.5rem 3rem 0.5rem 1rem;
}

.c0::-webkit-input-placeholder {
  font: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: inherit;
  color: #54595f;
}

.c0::-moz-placeholder {
  font: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: inherit;
  color: #54595f;
}

.c0:-ms-input-placeholder {
  font: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: inherit;
  color: #54595f;
}

.c0::placeholder {
  font: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: inherit;
  color: #54595f;
}

.c0::-webkit-inner-spin-button,
.c0::-webkit-outer-spin-button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  margin: 0;
}

.c0:focus {
  border-color: transparent;
  box-shadow: 0 0 4px 1px #54595f;
  background-color: #fff;
}

<textarea
  aria-invalid={false}
  className="c0"
  id="the-textarea"
  onBlur={[Function]}
  onFocus={[Function]}
/>
`;

exports[`TextArea feedback states ensures that the contents do not overlap the icon 1`] = `
.c0 {
  max-width: 100%;
  min-width: 100%;
  min-height: 208px;
  position: relative;
  width: 100%;
  margin: 0;
  outline: 0;
  text-overflow: ellipsis;
  border-color: #54595f;
  -ms-overflow-style: -ms-autohiding-scrollbar;
  border-width: 1px;
  border-style: solid;
  border-radius: 4px;
  font-family: "TELUS-Web","Helvetica Neue",Helvetica,Arial,sans-serif;
  word-wrap: break-word;
  font-size: 1rem;
  -webkit-letter-spacing: -0.8px;
  -moz-letter-spacing: -0.8px;
  -ms-letter-spacing: -0.8px;
  letter-spacing: -0.8px;
  line-height: 1.5;
  font-weight: 400;
  color: #2a2c2e;
  -moz-appearance: textfield;
  padding: 0.5rem 3rem 0.5rem 1rem;
}

.c0::-webkit-input-placeholder {
  font: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: inherit;
  color: #54595f;
}

.c0::-moz-placeholder {
  font: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: inherit;
  color: #54595f;
}

.c0:-ms-input-placeholder {
  font: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: inherit;
  color: #54595f;
}

.c0::placeholder {
  font: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: inherit;
  color: #54595f;
}

.c0::-webkit-inner-spin-button,
.c0::-webkit-outer-spin-button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  margin: 0;
}

.c0:focus {
  border-color: transparent;
  box-shadow: 0 0 4px 1px #54595f;
  background-color: #fff;
}

.c0:not(:focus) {
  border-color: #248700;
}

<textarea
  aria-invalid={false}
  className="c0"
  id="the-textarea"
  onBlur={[Function]}
  onFocus={[Function]}
/>
`;

exports[`TextArea label can have a short hint 1`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c1 > *:not(:last-child) {
  margin-right: 0.5rem;
}

.c0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

@media (min-width:768px) {
  .c1 > *:not(:last-child) {
    margin-right: 0.5rem;
  }
}

<label
  htmlFor="the-textarea"
>
  <Styled(Box)
    between={2}
    inline={true}
    tag="span"
  >
    <StyledComponent
      between={2}
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-EHOje",
            "isStatic": true,
            "lastClassName": "c0",
            "rules": Array [
              "align-items: center;",
            ],
          },
          "displayName": "Styled(Box)",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-EHOje",
          "target": [Function],
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      inline={true}
      tag="span"
    >
      <Box
        between={2}
        className="c0"
        inline={true}
        tag="span"
      >
        <styled.div
          between={2}
          className="c0"
          inline={true}
          tag="span"
        >
          <StyledComponent
            between={2}
            className="c0"
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [
                  [Function],
                ],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bdVaJa",
                  "isStatic": false,
                  "lastClassName": "c1",
                  "rules": Array [
                    [Function],
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bdVaJa",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            inline={true}
            tag="span"
          >
            <span
              className="c0 sc-EHOje c0 c1"
            >
              <Text
                block={false}
                bold={true}
                invert={false}
                size="medium"
              >
                <span
                  className="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__medium___1rxfE TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__boldFont___2YS3O TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__color___2CNH8"
                >
                  The textarea
                </span>
              </Text>
              <Text
                block={false}
                bold={false}
                id="the-textarea_hint"
                invert={false}
                size="small"
              >
                <span
                  className="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__small___mt5lS TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__smallFont___3S6nz TDS_Typography-modules__color___2CNH8"
                  id="the-textarea_hint"
                >
                  The short hint
                </span>
              </Text>
            </span>
          </StyledComponent>
        </styled.div>
      </Box>
    </StyledComponent>
  </Styled(Box)>
</label>
`;

exports[`TextArea renders 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c0 > *:not(:last-child) {
  margin-bottom: 0.5rem;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c3 > *:not(:last-child) {
  margin-right: 0.5rem;
}

.c4 {
  max-width: 100%;
  min-width: 100%;
  min-height: 208px;
  position: relative;
}

.c2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 {
  max-width: 100%;
  min-width: 100%;
  min-height: 208px;
  position: relative;
  width: 100%;
  margin: 0;
  outline: 0;
  text-overflow: ellipsis;
  border-color: #54595f;
  -ms-overflow-style: -ms-autohiding-scrollbar;
  border-width: 1px;
  border-style: solid;
  border-radius: 4px;
  font-family: "TELUS-Web","Helvetica Neue",Helvetica,Arial,sans-serif;
  word-wrap: break-word;
  font-size: 1rem;
  -webkit-letter-spacing: -0.8px;
  -moz-letter-spacing: -0.8px;
  -ms-letter-spacing: -0.8px;
  letter-spacing: -0.8px;
  line-height: 1.5;
  font-weight: 400;
  color: #2a2c2e;
  -moz-appearance: textfield;
  padding: 0.5rem 3rem 0.5rem 1rem;
}

.c5::-webkit-input-placeholder {
  font: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: inherit;
  color: #54595f;
}

.c5::-moz-placeholder {
  font: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: inherit;
  color: #54595f;
}

.c5:-ms-input-placeholder {
  font: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: inherit;
  color: #54595f;
}

.c5::placeholder {
  font: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: inherit;
  color: #54595f;
}

.c5::-webkit-inner-spin-button,
.c5::-webkit-outer-spin-button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  margin: 0;
}

.c5:focus {
  border-color: transparent;
  box-shadow: 0 0 4px 1px #54595f;
  background-color: #fff;
}

.c6 {
  position: absolute;
  right: 1rem;
  top: 0.5rem;
  overflow: visible;
}

@media (min-width:768px) {
  .c0 > *:not(:last-child) {
    margin-bottom: 0.5rem;
  }
}

@media (min-width:768px) {
  .c1 {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
}

@media (min-width:768px) {
  .c3 > *:not(:last-child) {
    margin-right: 0.5rem;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
  >
    <label
      for="the-textarea"
    >
      <span
        class="c2 sc-EHOje c2 c3"
      >
        <span
          class="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__medium___1rxfE TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__boldFont___2YS3O TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__color___2CNH8"
        >
          The textarea
        </span>
      </span>
    </label>
  </div>
  <div
    class="c4"
  >
    <textarea
      aria-invalid="false"
      class="c5"
      id="the-textarea"
    />
    <div
      class="c6"
    />
  </div>
</div>
`;

exports[`TextArea renders with a feedback state and icon 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c0 > *:not(:last-child) {
  margin-bottom: 0.5rem;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.c3 > *:not(:last-child) {
  margin-right: 0.5rem;
}

.c7 {
  line-height: 1;
}

.c4 {
  max-width: 100%;
  min-width: 100%;
  min-height: 208px;
  position: relative;
}

.c2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 {
  max-width: 100%;
  min-width: 100%;
  min-height: 208px;
  position: relative;
  width: 100%;
  margin: 0;
  outline: 0;
  text-overflow: ellipsis;
  border-color: #54595f;
  -ms-overflow-style: -ms-autohiding-scrollbar;
  border-width: 1px;
  border-style: solid;
  border-radius: 4px;
  font-family: "TELUS-Web","Helvetica Neue",Helvetica,Arial,sans-serif;
  word-wrap: break-word;
  font-size: 1rem;
  -webkit-letter-spacing: -0.8px;
  -moz-letter-spacing: -0.8px;
  -ms-letter-spacing: -0.8px;
  letter-spacing: -0.8px;
  line-height: 1.5;
  font-weight: 400;
  color: #2a2c2e;
  -moz-appearance: textfield;
  padding: 0.5rem 3rem 0.5rem 1rem;
}

.c5::-webkit-input-placeholder {
  font: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: inherit;
  color: #54595f;
}

.c5::-moz-placeholder {
  font: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: inherit;
  color: #54595f;
}

.c5:-ms-input-placeholder {
  font: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: inherit;
  color: #54595f;
}

.c5::placeholder {
  font: inherit;
  -webkit-letter-spacing: inherit;
  -moz-letter-spacing: inherit;
  -ms-letter-spacing: inherit;
  letter-spacing: inherit;
  line-height: inherit;
  color: #54595f;
}

.c5::-webkit-inner-spin-button,
.c5::-webkit-outer-spin-button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  margin: 0;
}

.c5:focus {
  border-color: transparent;
  box-shadow: 0 0 4px 1px #54595f;
  background-color: #fff;
}

.c5:not(:focus) {
  border-color: #c12335;
}

.c6 {
  position: absolute;
  right: 1rem;
  top: 0.5rem;
  overflow: visible;
}

@media (min-width:768px) {
  .c0 > *:not(:last-child) {
    margin-bottom: 0.5rem;
  }
}

@media (min-width:768px) {
  .c1 {
    -webkit-box-pack: justify;
    -webkit-justify-content: space-between;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
}

@media (min-width:768px) {
  .c3 > *:not(:last-child) {
    margin-right: 0.5rem;
  }
}

<div
  class="c0"
>
  <div
    class="c1"
  >
    <label
      for="the-textarea"
    >
      <span
        class="c2 sc-EHOje c2 c3"
      >
        <span
          class="TDS_Typography-modules__default___KlcpP TDS_Typography-modules__medium___1rxfE TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__boldFont___2YS3O TDS_Typography-modules__wordBreak___3OZx_ TDS_Typography-modules__color___2CNH8"
        >
          The textarea
        </span>
      </span>
    </label>
  </div>
  <div
    class="c4"
  >
    <textarea
      aria-invalid="true"
      class="c5"
      id="the-textarea"
    />
    <div
      class="c6"
    >
      <div
        style="transition:opacity 100ms ease-in-out;opacity:1"
      >
        <div
          class="c7"
        >
          <i
            aria-label="The value of this input field is invalid."
            class="TDS_Icon-modules__iconExclamationPointCircle___1HgRN TDS_Icon-modules__icon___13xYd TDS_Icon-modules__error___yuB9x TDS_Icon-modules__size16___1pm12"
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;
